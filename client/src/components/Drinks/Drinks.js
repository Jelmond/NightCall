import './Drinks.scss';
import ShawCard from '../ShawBox/ShawCard/ShawCard';
import DrinksLogo from './Web.png'
import DrinkCard from './DrinksCard/DrinkCard';
import cola from './images/cola.png'
import sprite from './images/sprite.png'
import colaSugar from './images/colaSugar.png'
import fanta from './images/fanta.png'
import useStore from '../../store/store';
import { useEffect, useRef } from 'react';



function Drinks() {
  
    const cards = [
        [cola, 'Кока кола 0.5', 4.00],
        [colaSugar, 'Кока-кола без сахара (0,5)', 4.00],
        [sprite, 'Спрайт (0,5)', 4.00],
        [fanta, 'Фанта (0,5)', 4.00],
    ]

    const bucketRef = useRef(null)

    const isBucketClicked = useStore((state) => (state.isBucketClicked))

    useEffect(() => {
        if(isBucketClicked) {
            window.scrollTo({
                top: bucketRef.current.offsetTop,
                behavior: 'smooth',
              });
              useStore.setState({isBucketClicked: false})
        }
    }, [isBucketClicked])

    return (
    <div className="drinks" ref={bucketRef}>
        {/* <p className="shaw-box__title">Холодные напитки, соусы</p>
        <img src={DrinksLogo} alt='' width='42' height='51' className='shaw-box__logo'/> */}
        <div className='semiTitle'>
            <svg width="22" height="32" viewBox="0 0 22 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M8.14576 2.72241C8.55494 2.72241 8.89092 3.04586 8.90648 3.45474L8.93918 3.9025C8.94554 3.96882 8.95291 4.04009 8.96139 4.11573C9.01788 4.61992 9.10404 5.12304 9.22441 5.5859L9.29115 5.82586L9.36407 6.05521C9.47868 6.39732 10.412 8.69781 10.6674 9.37602C11.1001 10.5249 11.4388 11.5588 11.6893 12.5463C12.0089 13.806 12.1692 14.9367 12.1421 15.9409C12.1308 16.3612 11.7809 16.6927 11.3606 16.6814C10.9403 16.6701 10.6088 16.3202 10.6201 15.8999C10.643 15.0538 10.5014 14.0555 10.2135 12.9207C10.0257 12.1804 9.78212 11.4034 9.48009 10.559L9.24257 9.91264C9.00188 9.27357 8.05297 6.93455 7.92144 6.54193C7.85923 6.35884 7.80251 6.16762 7.75089 5.96909C7.65715 5.60864 7.58236 5.23422 7.52396 4.85545L7.44346 4.2448H4.65506L4.64832 4.35488C4.60898 4.81374 4.49121 5.44348 4.25059 6.18543L4.11984 6.56548C4.06445 6.71779 3.73707 7.57999 3.64754 7.81992L3.18629 9.09675C3.11422 9.30415 3.04407 9.51053 2.97508 9.7184C2.65886 10.6712 2.39575 11.5726 2.19461 12.4203C1.89049 13.7022 1.74186 14.8074 1.7738 15.6859L1.82816 17.0386C1.9024 18.6793 1.98958 19.7447 2.16052 21.1462L2.40888 23.1272C2.49252 23.9005 2.51947 24.4394 2.51134 24.7758L2.49816 25.1185C2.49051 25.2546 2.47924 25.4119 2.46322 25.588C2.40981 26.1754 2.3202 26.7638 2.18432 27.3202C2.11274 27.6132 2.02973 27.8904 1.93394 28.1495L1.73734 28.7033C1.57903 29.1757 1.52855 29.4234 1.52306 29.6209L1.52558 29.7615C1.53236 29.9512 1.67189 30.2114 1.84267 30.2928L1.94807 30.3183H11.3646C11.785 30.3183 12.1259 30.6591 12.1259 31.0795C12.1259 31.4474 11.8649 31.7543 11.518 31.8253L11.3646 31.8408H1.94807C0.790983 31.8408 0.142203 30.9165 0.022827 30.0348L0.00256786 29.7798C-0.0185822 29.2734 0.0858395 28.7577 0.505876 27.6215C0.580371 27.42 0.646866 27.198 0.705269 26.9589C0.821257 26.484 0.899884 25.9677 0.946948 25.4501L0.977632 25.0394L0.989169 24.7445L0.989854 24.5853C0.985442 24.2428 0.946159 23.689 0.849528 22.8935L0.648267 21.3228C0.429851 19.5304 0.343988 18.2632 0.252281 15.7412C0.214567 14.7041 0.380186 13.4725 0.713207 12.0689C0.925575 11.1738 1.20078 10.231 1.53005 9.23882C1.67238 8.80996 1.81915 8.38832 1.97646 7.95314L2.68897 6.04516C2.96722 5.27999 3.09332 4.64783 3.12946 4.26233L3.13962 4.11255V3.48368C3.13962 3.1158 3.40057 2.80886 3.74746 2.73788L3.90088 2.72241H8.14576Z" fill="white"/>
                <path d="M8.17116 0C8.54142 0 8.8495 0.264198 8.91815 0.613712L8.9324 0.768206L8.90757 3.49055C8.90374 3.91097 8.55982 4.24868 8.1394 4.24488C7.77153 4.24149 7.46699 3.97776 7.39917 3.63023L7.38511 3.47667L7.40271 1.52158H4.66216L4.66273 3.48361C4.66273 3.85149 4.40178 4.15843 4.05488 4.22941L3.90146 4.24488C3.53358 4.24488 3.22665 3.98393 3.15566 3.63703L3.1402 3.48361V0.761265C3.1402 0.393384 3.40115 0.0864513 3.74804 0.0154662L3.90146 0H8.17116Z" fill="white"/>
                <path d="M20.6077 15.1591H8.13781C7.68493 15.1591 7.3322 15.5521 7.38098 16.0023L8.88696 29.9037C9.00289 30.9857 9.91779 31.8076 11.0091 31.8076H18.117C19.2083 31.8076 20.1232 30.9857 20.2392 29.9028L21.3664 15.9817C21.4023 15.5385 21.0523 15.1591 20.6077 15.1591ZM8.98589 16.6794H19.7806L18.7235 29.7603C18.6923 30.0498 18.4303 30.2851 18.117 30.2851H11.0091L10.8575 30.2662C10.6148 30.2046 10.4283 29.9982 10.4007 29.7406L8.98589 16.6794Z" fill="white"/>
                <path d="M19.8455 23.0779C20.266 23.0779 20.6068 23.4187 20.6068 23.8391C20.6068 24.207 20.3459 24.514 19.999 24.5849L19.8455 24.6004H9.18784C8.7674 24.6004 8.42657 24.2596 8.42657 23.8391C8.42657 23.4713 8.68752 23.1643 9.03442 23.0933L9.18784 23.0779H19.8455Z" fill="white"/>
            </svg>
            Холодные напитки
        </div>
        <div className="drinks__container">
            {cards.map((card) => (
                <DrinkCard image={card[0]} title={card[1]} price={card[2]} key={card[1]}/>
            ))}
        </div>
        <p className='difference'>
            Внешний вид блюда может отличаться от изображения на картинке
        </p>
    </div>
  );
}

export default Drinks;
